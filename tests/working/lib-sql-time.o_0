sql_lib : From lib:sql
utils_lib : From lib:utils

test_query : Template sql_lib.offline_query {
	table : [ { sql_from : "XXX"  known_columns : [] } ]
	columns : {
		a : expr.extract {
			field : year
			arg : expr.now {}
		}
	}
}

sql_stmts : {
	mssql : "SELECT DATEPART('year', GETUTCDATE()) AS [a]"
	mysql : "SELECT EXTRACT(YEAR FROM UTC_TIMESTAMP()) AS `a`"
	postgresql : "SELECT EXTRACT(YEAR FROM (now() at time zone 'utc')) AS \"a\""
	sqlite : "SELECT CAST(strftime('%Y', datetime('now', 'utc')) AS INTEGER) AS \"a\""
}

results : For provider : sql_lib.sql_providers, stmt : sql_stmts, name : Name
	Select name : stmt Is Null || test_query(provider : provider) == stmt

value : utils_lib.all(args : results)
