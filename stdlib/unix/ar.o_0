Introduction{{{Templates for generating UNIX \Mono{ar} archives, which are conveniently text-only.}}}
{{{A BSD \Mono{ar} style archive}}}
archive_tmpl : Template {
	{{{The collection of \{file_tmpl} files.}}}
	args : Required
	value : For file : args Reduce acc & file.value With acc : "!<arch>\n"
	{{{The default user ID to create files.}}}
	uid : 0
	{{{The default group ID to create files.}}}
	gid : 0
	{{{The modification time, as a time or seconds since the epoch.}}}
	mtime : time_lib.now.utc
	{{{The user permission bits.}}}
	user : perm_lib.rw
	{{{The group permission bits.}}}
	group : perm_lib.r
	{{{The other permission bits.}}}
	other : perm_lib.r
}

{{{A file in a compressed archive}}}
file_tmpl : Template {
	{{{The file name.}}}
	file_name : Required
	{{{The file contents.}}}
	contents : Required
	uid : Used
	gid : Used
	mtime : Used
	user : Used
	group : Used
	other : Used

	file_name_length : utils_lib.str_utf8_length(file_name)
	# If the file name is more than 16 characters, use the BSD `ar` encoding.
	file_header : If file_name_length > 16 Then "#1/" & file_name_length Else file_name
	header_suffix : If file_name_length > 16 Then file_name Else ""
	header_perms :
		utils_lib.str_pad(uid Enforce Int, length : 6) &
		utils_lib.str_pad(gid Enforce Int, length : 6) &
		utils_lib.str_pad((perm_lib.permission_from_mode {}).octal, length : 8)
	value :
		utils_lib.str_pad(file_header, length : 16) &
		utils_lib.str_pad(If mtime Is Int Then mtime Else mtime.epoch To Int, length : 12) &
		header_perms &
		utils_lib.str_pad(utils_lib.str_utf8_length(contents, header_suffix), length : 10) &
		"`\n" & header_suffix & contents
}

time_lib : From lib:time
utils_lib : From lib:utils
perm_lib : From lib:unix/perm
